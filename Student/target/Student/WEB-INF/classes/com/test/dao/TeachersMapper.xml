<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.TeachersMapper" >
  <resultMap id="BaseResultMap" type="com.test.entity.Teachers" >
    <id column="teacher_id" property="teacher_id" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacher_name" jdbcType="VARCHAR" />
    <result column="teacher_password" property="teacher_password" jdbcType="VARCHAR" />
    <result column="teacher_email" property="teacher_email" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    teacher_id, teacher_name, teacher_password, teacher_email, role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from teachers
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from teachers
     LIMIT #{before},#{after}
  </select>
  <select id="count" resultType="int">
        select count(*) from teachers
  </select>
  <select id="login" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from teachers
    where teacher_id = #{teacher_id,jdbcType=VARCHAR} and teacher_password = #{teacher_password,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teachers
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.test.entity.Teachers" >
    insert into teachers (teacher_id, teacher_name, teacher_password,
      teacher_email, role
      )
    values (#{teacher_id,jdbcType=VARCHAR}, #{teacher_name,jdbcType=VARCHAR}, #{teacher_password,jdbcType=VARCHAR},
      #{teacher_email,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.entity.Teachers" >
    insert into teachers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacher_id != null" >
        teacher_id,
      </if>
      <if test="teacher_name != null" >
        teacher_name,
      </if>
      <if test="teacher_password != null" >
        teacher_password,
      </if>
      <if test="teacher_email != null" >
        teacher_email,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacher_id != null" >
        #{teacher_id,jdbcType=VARCHAR},
      </if>
      <if test="teacher_name != null" >
        #{teacher_name,jdbcType=VARCHAR},
      </if>
      <if test="teacher_password != null" >
        #{teacher_password,jdbcType=VARCHAR},
      </if>
      <if test="teacher_email != null" >
        #{teacher_email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.entity.Teachers" >
    update teachers
    <set >
      <if test="teacher_name != null" >
        teacher_name = #{teacher_name,jdbcType=VARCHAR},
      </if>
      <if test="teacher_password != null" >
        teacher_password = #{teacher_password,jdbcType=VARCHAR},
      </if>
      <if test="teacher_email != null" >
        teacher_email = #{teacher_email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.entity.Teachers" >
    update teachers
    set teacher_name = #{teacher_name,jdbcType=VARCHAR},
      teacher_password = #{teacher_password,jdbcType=VARCHAR},
      teacher_email = #{teacher_email,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPassword" parameterType="com.test.entity.Teachers" >
    update teachers
    set
      teacher_password = #{teacher_password,jdbcType=VARCHAR}
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </update>
</mapper>